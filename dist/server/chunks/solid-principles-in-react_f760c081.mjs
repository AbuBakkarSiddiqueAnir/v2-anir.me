import { m as markdocConfig, a as assetsConfig, c as createGetHeadings, b as createContentComponent, $ as $$Renderer } from './runtime-assets-config_2fd3ddfe.mjs';

markdocConfig.nodes = { ...assetsConfig.nodes, ...markdocConfig.nodes };




const tagComponentMap = {};
const nodeComponentMap = {};

const options = undefined;

const stringifiedAst = "{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[0,1],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[0,1],\"inline\":false,\"attributes\":{\"level\":4},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[0,1],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[0,1],\"inline\":true,\"attributes\":{\"content\":\"I'm pretty sure, as a software developer, you have a sound knowledge of solid principles and you always use them in your code :) Just jokinggg!\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":0},\"end\":{\"line\":1}}}],\"type\":\"inline\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":0},\"end\":{\"line\":1}}}],\"type\":\"heading\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":0},\"end\":{\"line\":1}}}],\"type\":\"blockquote\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":0},\"end\":{\"line\":1}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[2,3],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[2,3],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[2,3],\"inline\":true,\"attributes\":{\"content\":\"Ohh, It's about react! Gosh, we don't need those principles in react! do we?\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":2},\"end\":{\"line\":3}}}],\"type\":\"inline\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":2},\"end\":{\"line\":3}}}],\"type\":\"paragraph\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":2},\"end\":{\"line\":3}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[4,5],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[4,5],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[4,5],\"inline\":true,\"attributes\":{\"content\":\"I myself have been working with react for more than two and half years. And also it happens that, i knew about  solid principles for more than 2 years. but it just happened like some months ago,from i have been tryyying.. consciously to use them in my react code. And believe ,e, it had changed my code structure.\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":4},\"end\":{\"line\":5}}}],\"type\":\"inline\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":4},\"end\":{\"line\":5}}}],\"type\":\"paragraph\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":4},\"end\":{\"line\":5}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[6,7],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[6,7],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[6,7],\"inline\":true,\"attributes\":{\"content\":\"No more nonsense talk, just dive into main topic.😠.....oka oka..\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":6},\"end\":{\"line\":7}}}],\"type\":\"inline\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":6},\"end\":{\"line\":7}}}],\"type\":\"paragraph\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":6},\"end\":{\"line\":7}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[8,9],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[8,9],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[8,9],\"inline\":true,\"attributes\":{\"content\":\"Gonna be a boring article, let me get a coffee for you please...\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":8},\"end\":{\"line\":9}}}],\"type\":\"inline\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":8},\"end\":{\"line\":9}}}],\"type\":\"paragraph\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":8},\"end\":{\"line\":9}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[10,11],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[10,11],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[10,11],\"inline\":true,\"attributes\":{\"alt\":\"\",\"src\":\"/content/images/solid-principles-in-react/coffe-gif.gif\"},\"children\":[],\"type\":\"image\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":10},\"end\":{\"line\":11}}}],\"type\":\"inline\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":10},\"end\":{\"line\":11}}}],\"type\":\"paragraph\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":10},\"end\":{\"line\":11}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[12,13],\"inline\":false,\"attributes\":{\"level\":3},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[12,13],\"inline\":false,\"attributes\":{},\"children\":[],\"type\":\"inline\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":12},\"end\":{\"line\":13}}}],\"type\":\"heading\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":12},\"end\":{\"line\":13}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[14,15],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[14,15],\"inline\":false,\"attributes\":{\"level\":3},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[14,15],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[14,15],\"inline\":true,\"attributes\":{\"content\":\"1. Single Responsibility Principle (SRP)\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":14},\"end\":{\"line\":15}}}],\"type\":\"inline\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":14},\"end\":{\"line\":15}}}],\"type\":\"heading\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":14},\"end\":{\"line\":15}}}],\"type\":\"blockquote\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":14},\"end\":{\"line\":15}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[16,17],\"inline\":false,\"attributes\":{\"level\":5},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[16,17],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[16,17],\"inline\":true,\"attributes\":{\"content\":\"A class should serve a single, clearly defined purpose, reducing the need for frequent changes.\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":16},\"end\":{\"line\":17}}}],\"type\":\"inline\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":16},\"end\":{\"line\":17}}}],\"type\":\"heading\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":16},\"end\":{\"line\":17}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[18,19],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[18,19],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[18,19],\"inline\":true,\"attributes\":{\"content\":\"We can implement the srp into our react code, by making sure that each component in our application has a specific, well-defined work to do. Likely, a component can be responsible for displaying a static part of a page, handling a user input or doing some fetch calls. By limiting and controlling the responsibility, we can improve the code quality , clarity and maintainability of our code-base.\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":18},\"end\":{\"line\":19}}}],\"type\":\"inline\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":18},\"end\":{\"line\":19}}}],\"type\":\"paragraph\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":18},\"end\":{\"line\":19}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[20,24],\"inline\":false,\"attributes\":{\"ordered\":false,\"marker\":\"-\"},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[20,21],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[20,21],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[20,21],\"inline\":true,\"attributes\":{\"content\":\"Better not mix different/'different kind of' jobs in one component\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":20},\"end\":{\"line\":21}}}],\"type\":\"inline\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":20},\"end\":{\"line\":21}}}],\"type\":\"item\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":20},\"end\":{\"line\":21}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[21,22],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[21,22],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[21,22],\"inline\":true,\"attributes\":{\"content\":\"Using composition will make sure reusable components will be able to build complex UI's.\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":21},\"end\":{\"line\":22}}}],\"type\":\"inline\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":21},\"end\":{\"line\":22}}}],\"type\":\"item\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":21},\"end\":{\"line\":22}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[22,24],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[22,23],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[22,23],\"inline\":true,\"attributes\":{\"content\":\"Need to handle props and state wisely\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":22},\"end\":{\"line\":23}}}],\"type\":\"inline\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":22},\"end\":{\"line\":23}}}],\"type\":\"item\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":22},\"end\":{\"line\":24}}}],\"type\":\"list\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":20},\"end\":{\"line\":24}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[24,25],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[24,25],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[24,25],\"inline\":true,\"attributes\":{\"content\":\"We need to make our components small and do one single thing.\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":24},\"end\":{\"line\":25}}}],\"type\":\"inline\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":24},\"end\":{\"line\":25}}}],\"type\":\"paragraph\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":24},\"end\":{\"line\":25}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[26,65],\"inline\":false,\"attributes\":{\"content\":\"import React, { useEffect, useState } from \\\"react\\\";\\nimport axios from \\\"axios\\\";\\n\\nconst ListOfEmployees = () => {\\n const [employees, setEmployees] = useState([]);\\n const [isLoading, setIsLoading] = useState(true);\\n\\n useEffect(() => {\\n   axios.get(\\\"https://.../employees/\\\").then((res) => {\\n       setEmployees(res.data)\\n   }).catch(e => {\\n       console.log(e.message);\\n   }).finally(() => {\\n       setIsLoading(false);\\n   })\\n }, [])\\n\\n if (isLoading){\\n   return <p>Loading...</p>\\n }\\n\\n return (\\n   <section>\\n       {employees.map(employee => {\\n           return (\\n               <article>\\n                    <img src={{uri:employee.img}} />\\n                    <p>{item.name}</p>\\n                    <p>{item.description}</p>\\n               </article>\\n           )\\n       })}\\n   </section>\\n );\\n};\\n\\nexport default ListItems;\\n\",\"language\":\"javascript\"},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[26,65],\"inline\":false,\"attributes\":{\"content\":\"import React, { useEffect, useState } from \\\"react\\\";\\nimport axios from \\\"axios\\\";\\n\\nconst ListOfEmployees = () => {\\n const [employees, setEmployees] = useState([]);\\n const [isLoading, setIsLoading] = useState(true);\\n\\n useEffect(() => {\\n   axios.get(\\\"https://.../employees/\\\").then((res) => {\\n       setEmployees(res.data)\\n   }).catch(e => {\\n       console.log(e.message);\\n   }).finally(() => {\\n       setIsLoading(false);\\n   })\\n }, [])\\n\\n if (isLoading){\\n   return <p>Loading...</p>\\n }\\n\\n return (\\n   <section>\\n       {employees.map(employee => {\\n           return (\\n               <article>\\n                    <img src={{uri:employee.img}} />\\n                    <p>{item.name}</p>\\n                    <p>{item.description}</p>\\n               </article>\\n           )\\n       })}\\n   </section>\\n );\\n};\\n\\nexport default ListItems;\\n\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":26},\"end\":{\"line\":65}}}],\"type\":\"fence\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":26},\"end\":{\"line\":65}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[66,67],\"inline\":false,\"attributes\":{\"level\":6},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[66,67],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[66,67],\"inline\":true,\"attributes\":{\"content\":\"At first this component code may look like decent enough. But if we dive into the responsibility it has taken, we can easily look into the issues within it.\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":66},\"end\":{\"line\":67}}}],\"type\":\"inline\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":66},\"end\":{\"line\":67}}}],\"type\":\"heading\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":66},\"end\":{\"line\":67}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[68,72],\"inline\":false,\"attributes\":{\"ordered\":true,\"marker\":\".\"},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[68,69],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[68,69],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[68,69],\"inline\":true,\"attributes\":{\"content\":\"Managing the state\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":68},\"end\":{\"line\":69}}}],\"type\":\"inline\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":68},\"end\":{\"line\":69}}}],\"type\":\"item\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":68},\"end\":{\"line\":69}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[69,70],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[69,70],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[69,70],\"inline\":true,\"attributes\":{\"content\":\"Making fetch calls to remote server\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":69},\"end\":{\"line\":70}}}],\"type\":\"inline\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":69},\"end\":{\"line\":70}}}],\"type\":\"item\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":69},\"end\":{\"line\":70}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[70,72],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[70,71],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[70,71],\"inline\":true,\"attributes\":{\"content\":\"Conditionally rendering the view\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":70},\"end\":{\"line\":71}}}],\"type\":\"inline\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":70},\"end\":{\"line\":71}}}],\"type\":\"item\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":70},\"end\":{\"line\":72}}}],\"type\":\"list\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":68},\"end\":{\"line\":72}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[72,73],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[72,73],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[72,73],\"inline\":true,\"attributes\":{\"content\":\"So, in general, its clear that \"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":72},\"end\":{\"line\":73}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[72,73],\"inline\":true,\"attributes\":{\"marker\":\"**\"},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[72,73],\"inline\":true,\"attributes\":{\"content\":\"ListOfEmployees\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":72},\"end\":{\"line\":73}}}],\"type\":\"strong\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":72},\"end\":{\"line\":73}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[72,73],\"inline\":true,\"attributes\":{\"content\":\" is not align with the SRP. In that case, we can try to refactor/rewrite this component.\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":72},\"end\":{\"line\":73}}}],\"type\":\"inline\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":72},\"end\":{\"line\":73}}}],\"type\":\"paragraph\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":72},\"end\":{\"line\":73}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[74,75],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[74,75],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[74,75],\"inline\":true,\"attributes\":{\"content\":\"First we can pull out the code block that is responsible for the state management and fetch calls by creating a hook.\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":74},\"end\":{\"line\":75}}}],\"type\":\"inline\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":74},\"end\":{\"line\":75}}}],\"type\":\"paragraph\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":74},\"end\":{\"line\":75}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[76,97],\"inline\":false,\"attributes\":{\"content\":\"import React, { useEffect, useState } from \\\"react\\\";\\nimport axios from \\\"axios\\\";\\n\\nconst useFetchEmployees = () => {\\n const [employees, setEmployees] = useState([]);\\n const [isLoading, setIsLoading] = useState(true);\\n\\nuseEffect(() => {\\n   axios.get(\\\"https://.../employees/\\\").then((res) => {\\n       setEmployees(res.data)\\n   }).catch(e => {\\n       console.log(e.message);\\n   }).finally(() => {\\n       setIsLoading(false);\\n   })\\n }, [])\\n\\n   return { listItems, isLoading };\\n}\\n\",\"language\":\"javascript\"},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[76,97],\"inline\":false,\"attributes\":{\"content\":\"import React, { useEffect, useState } from \\\"react\\\";\\nimport axios from \\\"axios\\\";\\n\\nconst useFetchEmployees = () => {\\n const [employees, setEmployees] = useState([]);\\n const [isLoading, setIsLoading] = useState(true);\\n\\nuseEffect(() => {\\n   axios.get(\\\"https://.../employees/\\\").then((res) => {\\n       setEmployees(res.data)\\n   }).catch(e => {\\n       console.log(e.message);\\n   }).finally(() => {\\n       setIsLoading(false);\\n   })\\n }, [])\\n\\n   return { listItems, isLoading };\\n}\\n\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":76},\"end\":{\"line\":97}}}],\"type\":\"fence\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":76},\"end\":{\"line\":97}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[98,99],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[98,99],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[98,99],\"inline\":true,\"attributes\":{\"content\":\"Now, the \"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":98},\"end\":{\"line\":99}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[98,99],\"inline\":true,\"attributes\":{\"marker\":\"**\"},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[98,99],\"inline\":true,\"attributes\":{\"content\":\"ListOfEmployees looks like,\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":98},\"end\":{\"line\":99}}}],\"type\":\"strong\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":98},\"end\":{\"line\":99}}}],\"type\":\"inline\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":98},\"end\":{\"line\":99}}}],\"type\":\"paragraph\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":98},\"end\":{\"line\":99}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[100,129],\"inline\":false,\"attributes\":{\"content\":\"import { useFetchEmployees } from \\\"hooks/useFetchEmployees\\\";\\n\\nconst ListItems = () => {\\n const { employees, isLoading } = useFetchEmployees();\\n\\n\\nif (isLoading){\\n   return <Text>Loading...</Text>\\n }\\n\\n return (\\n   <section>\\n       {employees.map(employee => {\\n           return (\\n               <article>\\n                    <img src={{uri:employee.img}} />\\n                    <p>{item.name}</p>\\n                    <p>{item.description}</p>\\n               </article>\\n           )\\n       })}\\n   </section>\\n );\\n};\\n\\n\\nexport default ListItems;\\n\",\"language\":\"javascript\"},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[100,129],\"inline\":false,\"attributes\":{\"content\":\"import { useFetchEmployees } from \\\"hooks/useFetchEmployees\\\";\\n\\nconst ListItems = () => {\\n const { employees, isLoading } = useFetchEmployees();\\n\\n\\nif (isLoading){\\n   return <Text>Loading...</Text>\\n }\\n\\n return (\\n   <section>\\n       {employees.map(employee => {\\n           return (\\n               <article>\\n                    <img src={{uri:employee.img}} />\\n                    <p>{item.name}</p>\\n                    <p>{item.description}</p>\\n               </article>\\n           )\\n       })}\\n   </section>\\n );\\n};\\n\\n\\nexport default ListItems;\\n\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":100},\"end\":{\"line\":129}}}],\"type\":\"fence\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":100},\"end\":{\"line\":129}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[130,131],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[130,131],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[130,131],\"inline\":true,\"attributes\":{\"content\":\"Ohh, Now, this code looks more manageable,\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":130},\"end\":{\"line\":131}}}],\"type\":\"inline\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":130},\"end\":{\"line\":131}}}],\"type\":\"paragraph\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":130},\"end\":{\"line\":131}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[132,133],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[132,133],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[132,133],\"inline\":true,\"attributes\":{\"content\":\"Opps, \"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":132},\"end\":{\"line\":133}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[132,133],\"inline\":true,\"attributes\":{\"marker\":\"**\"},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[132,133],\"inline\":true,\"attributes\":{\"content\":\"useFetchEmployees doing two things at once\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":132},\"end\":{\"line\":133}}}],\"type\":\"strong\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":132},\"end\":{\"line\":133}}}],\"type\":\"inline\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":132},\"end\":{\"line\":133}}}],\"type\":\"paragraph\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":132},\"end\":{\"line\":133}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[134,137],\"inline\":false,\"attributes\":{\"ordered\":false,\"marker\":\"-\"},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[134,135],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[134,135],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[134,135],\"inline\":true,\"attributes\":{\"content\":\"Managing the state\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":134},\"end\":{\"line\":135}}}],\"type\":\"inline\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":134},\"end\":{\"line\":135}}}],\"type\":\"item\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":134},\"end\":{\"line\":135}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[135,137],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[135,136],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[135,136],\"inline\":true,\"attributes\":{\"content\":\"Doing fetch calls\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":135},\"end\":{\"line\":136}}}],\"type\":\"inline\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":135},\"end\":{\"line\":136}}}],\"type\":\"item\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":135},\"end\":{\"line\":137}}}],\"type\":\"list\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":134},\"end\":{\"line\":137}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[137,138],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[137,138],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[137,138],\"inline\":true,\"attributes\":{\"content\":\"So, SRP hasn't been maintained, we need do something about it.\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":137},\"end\":{\"line\":138}}}],\"type\":\"inline\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":137},\"end\":{\"line\":138}}}],\"type\":\"paragraph\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":137},\"end\":{\"line\":138}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[139,140],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[139,140],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[139,140],\"inline\":true,\"attributes\":{\"content\":\"We can outsource the api call from \"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":139},\"end\":{\"line\":140}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[139,140],\"inline\":true,\"attributes\":{\"marker\":\"**\"},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[139,140],\"inline\":true,\"attributes\":{\"content\":\"useFetchEmployees,\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":139},\"end\":{\"line\":140}}}],\"type\":\"strong\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":139},\"end\":{\"line\":140}}}],\"type\":\"inline\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":139},\"end\":{\"line\":140}}}],\"type\":\"paragraph\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":139},\"end\":{\"line\":140}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[141,154],\"inline\":false,\"attributes\":{\"content\":\"import axios from \\\"axios\\\";\\n\\nconst fetchEmployees = () => {\\n return axios\\n   .get(\\\"https://.../employees/\\\")\\n   .catch((e) => {\\n     console(e.message);\\n   })\\n   .then((res) => res.data);\\n};\\n\\n\",\"language\":\"javascript\"},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[141,154],\"inline\":false,\"attributes\":{\"content\":\"import axios from \\\"axios\\\";\\n\\nconst fetchEmployees = () => {\\n return axios\\n   .get(\\\"https://.../employees/\\\")\\n   .catch((e) => {\\n     console(e.message);\\n   })\\n   .then((res) => res.data);\\n};\\n\\n\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":141},\"end\":{\"line\":154}}}],\"type\":\"fence\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":141},\"end\":{\"line\":154}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[155,156],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[155,156],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[155,156],\"inline\":true,\"attributes\":{\"content\":\"And Now \"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":155},\"end\":{\"line\":156}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[155,156],\"inline\":true,\"attributes\":{\"marker\":\"**\"},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[155,156],\"inline\":true,\"attributes\":{\"content\":\"useFetchEmployees\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":155},\"end\":{\"line\":156}}}],\"type\":\"strong\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":155},\"end\":{\"line\":156}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[155,156],\"inline\":true,\"attributes\":{\"content\":\" looks like,\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":155},\"end\":{\"line\":156}}}],\"type\":\"inline\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":155},\"end\":{\"line\":156}}}],\"type\":\"paragraph\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":155},\"end\":{\"line\":156}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[157,175],\"inline\":false,\"attributes\":{\"content\":\"import { useEffect, useState } from \\\"react\\\";\\nimport { fetchEmployees } from \\\"./api\\\";\\n\\nconst useFetchEmployees = () => {\\n const [employess, setEmployess] = useState([]);\\n const [isLoading, setIsLoading] = useState(true);\\n\\n useEffect(() => {\\n   fetchEmployees()\\n     .then((listItems) => setEmployess(listItems))\\n     .finally(() => setIsLoading(false));\\n }, []);\\n\\n\\n return { listItems, isLoading };\\n};\\n\",\"language\":\"javascript\"},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[157,175],\"inline\":false,\"attributes\":{\"content\":\"import { useEffect, useState } from \\\"react\\\";\\nimport { fetchEmployees } from \\\"./api\\\";\\n\\nconst useFetchEmployees = () => {\\n const [employess, setEmployess] = useState([]);\\n const [isLoading, setIsLoading] = useState(true);\\n\\n useEffect(() => {\\n   fetchEmployees()\\n     .then((listItems) => setEmployess(listItems))\\n     .finally(() => setIsLoading(false));\\n }, []);\\n\\n\\n return { listItems, isLoading };\\n};\\n\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":157},\"end\":{\"line\":175}}}],\"type\":\"fence\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":157},\"end\":{\"line\":175}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[176,177],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[176,177],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[176,177],\"inline\":true,\"attributes\":{\"content\":\"OWW, everything got put into place. But need to remember, there are times, when SRP may be responsible for complexity than it solves. It's on our shoulder to make our code manageable and understandable.\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":176},\"end\":{\"line\":177}}}],\"type\":\"inline\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":176},\"end\":{\"line\":177}}}],\"type\":\"paragraph\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":176},\"end\":{\"line\":177}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[178,179],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[178,179],\"inline\":false,\"attributes\":{\"level\":3},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[178,179],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[178,179],\"inline\":true,\"attributes\":{\"marker\":\"**\"},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[178,179],\"inline\":true,\"attributes\":{\"content\":\"2. Open/Closed Principle (OCP)\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":178},\"end\":{\"line\":179}}}],\"type\":\"strong\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":178},\"end\":{\"line\":179}}}],\"type\":\"inline\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":178},\"end\":{\"line\":179}}}],\"type\":\"heading\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":178},\"end\":{\"line\":179}}}],\"type\":\"blockquote\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":178},\"end\":{\"line\":179}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[180,181],\"inline\":false,\"attributes\":{\"level\":5},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[180,181],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[180,181],\"inline\":true,\"attributes\":{\"marker\":\"*\"},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[180,181],\"inline\":true,\"attributes\":{\"content\":\"\\\"Entitities (classes, modules, functions, etc.) should be open for extension but clossed for modification\\\"\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":180},\"end\":{\"line\":181}}}],\"type\":\"em\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":180},\"end\":{\"line\":181}}}],\"type\":\"inline\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":180},\"end\":{\"line\":181}}}],\"type\":\"heading\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":180},\"end\":{\"line\":181}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[182,185],\"inline\":false,\"attributes\":{\"ordered\":false,\"marker\":\"-\"},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[182,183],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[182,183],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[182,183],\"inline\":true,\"attributes\":{\"content\":\"Open for extension: it means we can add new behaviors, functionalities, and features to a component without having to change it's previous behaviours.\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":182},\"end\":{\"line\":183}}}],\"type\":\"inline\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":182},\"end\":{\"line\":183}}}],\"type\":\"item\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":182},\"end\":{\"line\":183}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[183,185],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[183,184],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[183,184],\"inline\":true,\"attributes\":{\"content\":\"Closed for modifications: After we have created and implemented a component, we should avoid directly manipulating its source code.\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":183},\"end\":{\"line\":184}}}],\"type\":\"inline\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":183},\"end\":{\"line\":184}}}],\"type\":\"item\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":183},\"end\":{\"line\":185}}}],\"type\":\"list\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":182},\"end\":{\"line\":185}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[185,186],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[185,186],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[185,186],\"inline\":true,\"attributes\":{\"content\":\"Lets take a look on this following example, that may clear it up,\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":185},\"end\":{\"line\":186}}}],\"type\":\"inline\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":185},\"end\":{\"line\":186}}}],\"type\":\"paragraph\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":185},\"end\":{\"line\":186}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[187,222],\"inline\":false,\"attributes\":{\"content\":\"import React from 'react';\\n\\ninterface IListItem {\\n  title: string;\\n  image: string;\\n  isAuth: boolean;\\n  onClickMember: () => void;\\n  onClickGuest: () => void;\\n}\\n\\nconst ListItem: React.FC<ILıstItem> = ({ title, image, isAuth, onClickMember, onClickGuest }: IListItem) => {\\n  const handleMember = () => {\\n    // Some logic\\n    onClickMember();\\n  };\\n\\n  const handleGuest = () => {\\n    // Some logic\\n    onClickGuest();\\n  };\\n  return (\\n    <article>\\n      <img source={{uri:image}} />\\n      <p>{title}</p>\\n      {\\n      isAuth ? \\n           <button onClick={handleMember}>Add to cart +</button> :\\n               <button onClick={handleGuest}>Show Modal</button>\\n       }\\n    </article>\\n  );\\n};\\n\\n\",\"language\":\"javascript\"},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[187,222],\"inline\":false,\"attributes\":{\"content\":\"import React from 'react';\\n\\ninterface IListItem {\\n  title: string;\\n  image: string;\\n  isAuth: boolean;\\n  onClickMember: () => void;\\n  onClickGuest: () => void;\\n}\\n\\nconst ListItem: React.FC<ILıstItem> = ({ title, image, isAuth, onClickMember, onClickGuest }: IListItem) => {\\n  const handleMember = () => {\\n    // Some logic\\n    onClickMember();\\n  };\\n\\n  const handleGuest = () => {\\n    // Some logic\\n    onClickGuest();\\n  };\\n  return (\\n    <article>\\n      <img source={{uri:image}} />\\n      <p>{title}</p>\\n      {\\n      isAuth ? \\n           <button onClick={handleMember}>Add to cart +</button> :\\n               <button onClick={handleGuest}>Show Modal</button>\\n       }\\n    </article>\\n  );\\n};\\n\\n\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":187},\"end\":{\"line\":222}}}],\"type\":\"fence\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":187},\"end\":{\"line\":222}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[223,224],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[223,224],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[223,224],\"inline\":true,\"attributes\":{\"content\":\"As we can see, the code  does not fit with the OCP. It violets by rendering different features depending on Authentication status.\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":223},\"end\":{\"line\":224}}}],\"type\":\"inline\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":223},\"end\":{\"line\":224}}}],\"type\":\"paragraph\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":223},\"end\":{\"line\":224}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[225,226],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[225,226],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[225,226],\"inline\":true,\"attributes\":{\"content\":\"We need to refactor this component,\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":225},\"end\":{\"line\":226}}}],\"type\":\"inline\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":225},\"end\":{\"line\":226}}}],\"type\":\"paragraph\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":225},\"end\":{\"line\":226}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[227,250],\"inline\":false,\"attributes\":{\"content\":\"interface IButtonHandler {\\n  handle(): void;\\n}\\n\\nexport const GuestButtonHandler: React.FC<{ onClickGuest?: () => void }> = ({ onClickGuest }) => {\\n  const handle = () => {\\n    // Some logic for guests\\n    onClickGuest();\\n  };\\n\\n  return <Button onClick={handle}>Show Modal</Button>;\\n};\\n\\nexport const MemberButtonHandler: React.FC<{ onClickMember?: () => void }> = ({ onClickMember }) => {\\n  const handle = () => {\\n    // Some logic for members\\n    onClickMember();\\n  };\\n\\n  return <button onClick={handle}>Add to cart +</button>;\\n};\\n\",\"language\":\"javascript\"},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[227,250],\"inline\":false,\"attributes\":{\"content\":\"interface IButtonHandler {\\n  handle(): void;\\n}\\n\\nexport const GuestButtonHandler: React.FC<{ onClickGuest?: () => void }> = ({ onClickGuest }) => {\\n  const handle = () => {\\n    // Some logic for guests\\n    onClickGuest();\\n  };\\n\\n  return <Button onClick={handle}>Show Modal</Button>;\\n};\\n\\nexport const MemberButtonHandler: React.FC<{ onClickMember?: () => void }> = ({ onClickMember }) => {\\n  const handle = () => {\\n    // Some logic for members\\n    onClickMember();\\n  };\\n\\n  return <button onClick={handle}>Add to cart +</button>;\\n};\\n\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":227},\"end\":{\"line\":250}}}],\"type\":\"fence\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":227},\"end\":{\"line\":250}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[251,272],\"inline\":false,\"attributes\":{\"content\":\"import React from 'react';\\n\\ninterface IListItem {\\n  title: string;\\n  image: string;\\n}\\n\\nexport const ListItem: React.FC<IListItem> = ({ title, image, children}) => {\\n\\n  return (\\n    <article>\\n      <img source={{ uri: image }} />\\n      <p>{title}</p>\\n      {children}\\n    </article>\\n  );\\n};\\n\\nexport default ListItem;\\n\",\"language\":\"javascript\"},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[251,272],\"inline\":false,\"attributes\":{\"content\":\"import React from 'react';\\n\\ninterface IListItem {\\n  title: string;\\n  image: string;\\n}\\n\\nexport const ListItem: React.FC<IListItem> = ({ title, image, children}) => {\\n\\n  return (\\n    <article>\\n      <img source={{ uri: image }} />\\n      <p>{title}</p>\\n      {children}\\n    </article>\\n  );\\n};\\n\\nexport default ListItem;\\n\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":251},\"end\":{\"line\":272}}}],\"type\":\"fence\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":251},\"end\":{\"line\":272}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[273,274],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[273,274],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[273,274],\"inline\":true,\"attributes\":{\"content\":\"and finally, we got rid of the unnecessary codes and create new props which is \"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":273},\"end\":{\"line\":274}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[273,274],\"inline\":true,\"attributes\":{\"content\":\"children\"},\"children\":[],\"type\":\"code\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":273},\"end\":{\"line\":274}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[273,274],\"inline\":true,\"attributes\":{\"content\":\" so the other component can extend this component by passing it as a child. Now our ListItem component will be \"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":273},\"end\":{\"line\":274}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[273,274],\"inline\":true,\"attributes\":{\"marker\":\"**\"},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[273,274],\"inline\":true,\"attributes\":{\"content\":\"Open\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":273},\"end\":{\"line\":274}}}],\"type\":\"strong\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":273},\"end\":{\"line\":274}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[273,274],\"inline\":true,\"attributes\":{\"content\":\" for extension and \"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":273},\"end\":{\"line\":274}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[273,274],\"inline\":true,\"attributes\":{\"marker\":\"**\"},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[273,274],\"inline\":true,\"attributes\":{\"content\":\"Closed\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":273},\"end\":{\"line\":274}}}],\"type\":\"strong\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":273},\"end\":{\"line\":274}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[273,274],\"inline\":true,\"attributes\":{\"content\":\" for modification.\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":273},\"end\":{\"line\":274}}}],\"type\":\"inline\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":273},\"end\":{\"line\":274}}}],\"type\":\"paragraph\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":273},\"end\":{\"line\":274}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[275,276],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[275,276],\"inline\":false,\"attributes\":{\"level\":3},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[275,276],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[275,276],\"inline\":true,\"attributes\":{\"marker\":\"**\"},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[275,276],\"inline\":true,\"attributes\":{\"content\":\"3. Liskov Substitution Principle (LSP)\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":275},\"end\":{\"line\":276}}}],\"type\":\"strong\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":275},\"end\":{\"line\":276}}}],\"type\":\"inline\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":275},\"end\":{\"line\":276}}}],\"type\":\"heading\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":275},\"end\":{\"line\":276}}}],\"type\":\"blockquote\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":275},\"end\":{\"line\":276}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[277,278],\"inline\":false,\"attributes\":{\"level\":5},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[277,278],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[277,278],\"inline\":true,\"attributes\":{\"marker\":\"*\"},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[277,278],\"inline\":true,\"attributes\":{\"content\":\"\\\"The behavior of the superclass should be preserved when substituted with an object of its subclass\\\"\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":277},\"end\":{\"line\":278}}}],\"type\":\"em\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":277},\"end\":{\"line\":278}}}],\"type\":\"inline\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":277},\"end\":{\"line\":278}}}],\"type\":\"heading\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":277},\"end\":{\"line\":278}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[279,280],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[279,280],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[279,280],\"inline\":true,\"attributes\":{\"content\":\"By adhering with LSP, we can ensure that your code remains modular, flexible, and maintainable, as it allows for polymorphism and promotes the reuse of code.\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":279},\"end\":{\"line\":280}}}],\"type\":\"inline\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":279},\"end\":{\"line\":280}}}],\"type\":\"paragraph\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":279},\"end\":{\"line\":280}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[281,288],\"inline\":false,\"attributes\":{\"content\":\"const SuccessButton = () => {\\n  return (\\n      <p>Success</p>\\n  );\\n};\\n\",\"language\":\"javascript\"},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[281,288],\"inline\":false,\"attributes\":{\"content\":\"const SuccessButton = () => {\\n  return (\\n      <p>Success</p>\\n  );\\n};\\n\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":281},\"end\":{\"line\":288}}}],\"type\":\"fence\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":281},\"end\":{\"line\":288}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[289,290],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[289,290],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[289,290],\"inline\":true,\"attributes\":{\"content\":\"So we want to create a \"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":289},\"end\":{\"line\":290}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[289,290],\"inline\":true,\"attributes\":{\"marker\":\"**\"},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[289,290],\"inline\":true,\"attributes\":{\"content\":\"SuccessButton\"},\"children\":[],\"type\":\"code\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":289},\"end\":{\"line\":290}}}],\"type\":\"strong\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":289},\"end\":{\"line\":290}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[289,290],\"inline\":true,\"attributes\":{\"content\":\" component but a button functionality couldn't be replaced by a 'p' so this violates the principle. What we should do instead is just return a button like this:\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":289},\"end\":{\"line\":290}}}],\"type\":\"inline\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":289},\"end\":{\"line\":290}}}],\"type\":\"paragraph\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":289},\"end\":{\"line\":290}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[291,300],\"inline\":false,\"attributes\":{\"content\":\"const SuccessButton = () => {\\n  return (\\n    <button style={styles.button} onPress={onPress}>\\n      <p>Success</p>\\n    </button>\\n  );\\n};\\n\",\"language\":\"javascript\"},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[291,300],\"inline\":false,\"attributes\":{\"content\":\"const SuccessButton = () => {\\n  return (\\n    <button style={styles.button} onPress={onPress}>\\n      <p>Success</p>\\n    </button>\\n  );\\n};\\n\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":291},\"end\":{\"line\":300}}}],\"type\":\"fence\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":291},\"end\":{\"line\":300}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[301,302],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[301,302],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[301,302],\"inline\":true,\"attributes\":{\"content\":\"This is better but it is not enough. We also should inherit all the features of the button itself:\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":301},\"end\":{\"line\":302}}}],\"type\":\"inline\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":301},\"end\":{\"line\":302}}}],\"type\":\"paragraph\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":301},\"end\":{\"line\":302}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[303,312],\"inline\":false,\"attributes\":{\"content\":\"const SuccessButton = () => {\\n  return (\\n    <button style={styles.button} onPress={onPress}  {…props}>\\n      <p>Success</p>\\n    </button>\\n  );\\n};\\n\",\"language\":\"javascript\"},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[303,312],\"inline\":false,\"attributes\":{\"content\":\"const SuccessButton = () => {\\n  return (\\n    <button style={styles.button} onPress={onPress}  {…props}>\\n      <p>Success</p>\\n    </button>\\n  );\\n};\\n\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":303},\"end\":{\"line\":312}}}],\"type\":\"fence\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":303},\"end\":{\"line\":312}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[313,314],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[313,314],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[313,314],\"inline\":true,\"attributes\":{\"content\":\"Now we inherited all of the attributes of the button and we pass the attributes to the new button. Also, any instance of SuccessButton can still be used in place of an instance of Button without changing the program’s behavior and following the \"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":313},\"end\":{\"line\":314}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[313,314],\"inline\":true,\"attributes\":{\"marker\":\"**\"},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[313,314],\"inline\":true,\"attributes\":{\"content\":\"LSP.\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":313},\"end\":{\"line\":314}}}],\"type\":\"strong\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":313},\"end\":{\"line\":314}}}],\"type\":\"inline\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":313},\"end\":{\"line\":314}}}],\"type\":\"paragraph\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":313},\"end\":{\"line\":314}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[315,316],\"inline\":false,\"attributes\":{},\"children\":[],\"type\":\"hr\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":315},\"end\":{\"line\":316}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[317,318],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[317,318],\"inline\":false,\"attributes\":{\"level\":3},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[317,318],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[317,318],\"inline\":true,\"attributes\":{\"marker\":\"**\"},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[317,318],\"inline\":true,\"attributes\":{\"content\":\"4. Interface Segregation Principle (ISP)\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":317},\"end\":{\"line\":318}}}],\"type\":\"strong\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":317},\"end\":{\"line\":318}}}],\"type\":\"inline\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":317},\"end\":{\"line\":318}}}],\"type\":\"heading\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":317},\"end\":{\"line\":318}}}],\"type\":\"blockquote\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":317},\"end\":{\"line\":318}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[319,320],\"inline\":false,\"attributes\":{\"level\":5},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[319,320],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[319,320],\"inline\":true,\"attributes\":{\"content\":\"''N\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":319},\"end\":{\"line\":320}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[319,320],\"inline\":true,\"attributes\":{\"marker\":\"*\"},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[319,320],\"inline\":true,\"attributes\":{\"content\":\"o code should be forced to depend on methods it does not use”\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":319},\"end\":{\"line\":320}}}],\"type\":\"em\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":319},\"end\":{\"line\":320}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[319,320],\"inline\":true,\"attributes\":{\"href\":\"https://en.wikipedia.org/wiki/Interface_segregation_principle#cite_note-ASD-1\"},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[319,320],\"inline\":true,\"attributes\":{\"marker\":\"*\"},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[319,320],\"inline\":true,\"attributes\":{\"content\":\"*\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":319},\"end\":{\"line\":320}}}],\"type\":\"em\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":319},\"end\":{\"line\":320}}}],\"type\":\"link\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":319},\"end\":{\"line\":320}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[319,320],\"inline\":true,\"attributes\":{\"marker\":\"*\"},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[319,320],\"inline\":true,\"attributes\":{\"content\":\". For React applications, we will rephrase it as “components should not depend on props they don’t use.\\\"\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":319},\"end\":{\"line\":320}}}],\"type\":\"em\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":319},\"end\":{\"line\":320}}}],\"type\":\"inline\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":319},\"end\":{\"line\":320}}}],\"type\":\"heading\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":319},\"end\":{\"line\":320}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[321,322],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[321,322],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[321,322],\"inline\":true,\"attributes\":{\"content\":\"No Talk, better, Look into an example snippet\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":321},\"end\":{\"line\":322}}}],\"type\":\"inline\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":321},\"end\":{\"line\":322}}}],\"type\":\"paragraph\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":321},\"end\":{\"line\":322}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[323,335],\"inline\":false,\"attributes\":{\"content\":\"const ListItem = ({item}) => {\\n\\n  return (\\n    <article>\\n      <img source={{uri:item.image}} />\\n      <p>{item.title}</p>\\n      <p>{item.description}</p>\\n    </article>\\n  );\\n};\\n\",\"language\":\"javascript\"},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[323,335],\"inline\":false,\"attributes\":{\"content\":\"const ListItem = ({item}) => {\\n\\n  return (\\n    <article>\\n      <img source={{uri:item.image}} />\\n      <p>{item.title}</p>\\n      <p>{item.description}</p>\\n    </article>\\n  );\\n};\\n\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":323},\"end\":{\"line\":335}}}],\"type\":\"fence\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":323},\"end\":{\"line\":335}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[336,337],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[336,337],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[336,337],\"inline\":true,\"attributes\":{\"content\":\"We have a \"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":336},\"end\":{\"line\":337}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[336,337],\"inline\":true,\"attributes\":{\"marker\":\"**\"},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[336,337],\"inline\":true,\"attributes\":{\"content\":\"ListItem\"},\"children\":[],\"type\":\"code\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":336},\"end\":{\"line\":337}}}],\"type\":\"strong\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":336},\"end\":{\"line\":337}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[336,337],\"inline\":true,\"attributes\":{\"content\":\" component which only needs a few data from the item prop, but, we end up giving it more than the component actually needs because the\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":336},\"end\":{\"line\":337}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[336,337],\"inline\":true,\"attributes\":{\"content\":\"item\"},\"children\":[],\"type\":\"code\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":336},\"end\":{\"line\":337}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[336,337],\"inline\":true,\"attributes\":{\"content\":\" props itself might contain data that the component doesn’t need\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":336},\"end\":{\"line\":337}}}],\"type\":\"inline\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":336},\"end\":{\"line\":337}}}],\"type\":\"paragraph\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":336},\"end\":{\"line\":337}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[338,339],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[338,339],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[338,339],\"inline\":true,\"attributes\":{\"content\":\"To solve this problem we may limit the props to only what the component needs,\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":338},\"end\":{\"line\":339}}}],\"type\":\"inline\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":338},\"end\":{\"line\":339}}}],\"type\":\"paragraph\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":338},\"end\":{\"line\":339}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[340,352],\"inline\":false,\"attributes\":{\"content\":\"const ListItem = ({image, title, description}) => {\\n\\n  return (\\n    <View>\\n      <img source={{uri:image}} />\\n      <p>{title}</p>\\n      <p>{description}</p>\\n    </View>\\n  );\\n};\\n\",\"language\":\"javascript\"},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[340,352],\"inline\":false,\"attributes\":{\"content\":\"const ListItem = ({image, title, description}) => {\\n\\n  return (\\n    <View>\\n      <img source={{uri:image}} />\\n      <p>{title}</p>\\n      <p>{description}</p>\\n    </View>\\n  );\\n};\\n\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":340},\"end\":{\"line\":352}}}],\"type\":\"fence\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":340},\"end\":{\"line\":352}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[353,354],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[353,354],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[353,354],\"inline\":true,\"attributes\":{\"content\":\" And now our component is compatible with the \"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":353},\"end\":{\"line\":354}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[353,354],\"inline\":true,\"attributes\":{\"marker\":\"**\"},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[353,354],\"inline\":true,\"attributes\":{\"content\":\"ISP\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":353},\"end\":{\"line\":354}}}],\"type\":\"strong\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":353},\"end\":{\"line\":354}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[353,354],\"inline\":true,\"attributes\":{\"content\":\" principle.\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":353},\"end\":{\"line\":354}}}],\"type\":\"inline\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":353},\"end\":{\"line\":354}}}],\"type\":\"paragraph\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":353},\"end\":{\"line\":354}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[355,356],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[355,356],\"inline\":false,\"attributes\":{\"level\":3},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[355,356],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[355,356],\"inline\":true,\"attributes\":{\"marker\":\"**\"},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[355,356],\"inline\":true,\"attributes\":{\"content\":\"5. Dependency Inversion Principle (DIP)\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":355},\"end\":{\"line\":356}}}],\"type\":\"strong\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":355},\"end\":{\"line\":356}}}],\"type\":\"inline\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":355},\"end\":{\"line\":356}}}],\"type\":\"heading\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":355},\"end\":{\"line\":356}}}],\"type\":\"blockquote\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":355},\"end\":{\"line\":356}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[357,358],\"inline\":false,\"attributes\":{\"level\":5},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[357,358],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[357,358],\"inline\":true,\"attributes\":{\"marker\":\"*\"},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[357,358],\"inline\":true,\"attributes\":{\"content\":\"\\\"High-level modules should not import anything from low-level modules. Both should depend on abstractions (e.g., interfaces). And abstractions should not depend on details. Details (concrete implementations) should depend on abstractions\\\"\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":357},\"end\":{\"line\":358}}}],\"type\":\"em\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":357},\"end\":{\"line\":358}}}],\"type\":\"inline\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":357},\"end\":{\"line\":358}}}],\"type\":\"heading\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":357},\"end\":{\"line\":358}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[359,360],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[359,360],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[359,360],\"inline\":true,\"attributes\":{\"content\":\"In the context of React, this principle ensures high-level components should not directly depend on low-level components, but both should depend on a common abstraction. In this case, “component” refers to any part of the application, whether it’s a React component, a function, a module, a class-based component, or a third-party library. Lets see with examples:\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":359},\"end\":{\"line\":360}}}],\"type\":\"inline\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":359},\"end\":{\"line\":360}}}],\"type\":\"paragraph\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":359},\"end\":{\"line\":360}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[361,381],\"inline\":false,\"attributes\":{\"content\":\"const CreateListItemForm = () => {\\n  const handleCreateListItemForm = async (e) => {\\n    try {\\n      const formData = new FormData(e.currentTarget);\\n      await axios.post(\\\"https://myapi.com/listItems\\\", formData);\\n    } catch (err) {\\n      console.error(err.message);\\n    }\\n  };\\n\\n  return (\\n    <form onSubmit={handleCreateListItemForm}>\\n      <input name=\\\"title\\\" />\\n      <input name=\\\"description\\\" />\\n      <input name=\\\"image\\\" />\\n    </form>\\n  );\\n};\\n\",\"language\":\"javascript\"},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[361,381],\"inline\":false,\"attributes\":{\"content\":\"const CreateListItemForm = () => {\\n  const handleCreateListItemForm = async (e) => {\\n    try {\\n      const formData = new FormData(e.currentTarget);\\n      await axios.post(\\\"https://myapi.com/listItems\\\", formData);\\n    } catch (err) {\\n      console.error(err.message);\\n    }\\n  };\\n\\n  return (\\n    <form onSubmit={handleCreateListItemForm}>\\n      <input name=\\\"title\\\" />\\n      <input name=\\\"description\\\" />\\n      <input name=\\\"image\\\" />\\n    </form>\\n  );\\n};\\n\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":361},\"end\":{\"line\":381}}}],\"type\":\"fence\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":361},\"end\":{\"line\":381}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[382,383],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[382,383],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[382,383],\"inline\":true,\"attributes\":{\"content\":\"The component above shows a form for handling creating a list item by rendering a form and sending the submitted data to an API.\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":382},\"end\":{\"line\":383}}}],\"type\":\"inline\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":382},\"end\":{\"line\":383}}}],\"type\":\"paragraph\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":382},\"end\":{\"line\":383}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[384,385],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[384,385],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[384,385],\"inline\":true,\"attributes\":{\"content\":\"Consider this scenario. There’s another form for editing a list item with the same UI but differing only in terms of logic(in our example it is an API endpoint). Our form would be unreusable since we need another endpoint to submit our edit form. Therefore, we need to create a component that isn’t dependent on a specific low-level module.\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":384},\"end\":{\"line\":385}}}],\"type\":\"inline\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":384},\"end\":{\"line\":385}}}],\"type\":\"paragraph\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":384},\"end\":{\"line\":385}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[386,397],\"inline\":false,\"attributes\":{\"content\":\"const ListItemForm = ({ onSubmit }) => {\\n  return (\\n    <form onSubmit={onSubmit}>\\n      <input name=\\\"title\\\" />\\n      <input name=\\\"description\\\" />\\n      <input name=\\\"image\\\" />\\n    </form>\\n  );\\n};\\n\",\"language\":\"javascript\"},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[386,397],\"inline\":false,\"attributes\":{\"content\":\"const ListItemForm = ({ onSubmit }) => {\\n  return (\\n    <form onSubmit={onSubmit}>\\n      <input name=\\\"title\\\" />\\n      <input name=\\\"description\\\" />\\n      <input name=\\\"image\\\" />\\n    </form>\\n  );\\n};\\n\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":386},\"end\":{\"line\":397}}}],\"type\":\"fence\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":386},\"end\":{\"line\":397}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[398,399],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[398,399],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[398,399],\"inline\":true,\"attributes\":{\"content\":\"We have removed the dependency from the form and now we can give it the necessary logic through props.\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":398},\"end\":{\"line\":399}}}],\"type\":\"inline\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":398},\"end\":{\"line\":399}}}],\"type\":\"paragraph\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":398},\"end\":{\"line\":399}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[400,413],\"inline\":false,\"attributes\":{\"content\":\"const CreateListItemForm = () => {\\n  const handleCreateListItem = async (e) => {\\n    try {\\n      const formData = new FormData(e.currentTarget);\\n      await axios.post(\\\"https://myapi.com/listItems\\\", formData);\\n    } catch (err) {\\n      console.error(err.message);\\n    }\\n  };\\n  return <ListItemForm onSubmit={handleCreateListItem} />;\\n};\\n\",\"language\":\"javascript\"},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[400,413],\"inline\":false,\"attributes\":{\"content\":\"const CreateListItemForm = () => {\\n  const handleCreateListItem = async (e) => {\\n    try {\\n      const formData = new FormData(e.currentTarget);\\n      await axios.post(\\\"https://myapi.com/listItems\\\", formData);\\n    } catch (err) {\\n      console.error(err.message);\\n    }\\n  };\\n  return <ListItemForm onSubmit={handleCreateListItem} />;\\n};\\n\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":400},\"end\":{\"line\":413}}}],\"type\":\"fence\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":400},\"end\":{\"line\":413}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[414,426],\"inline\":false,\"attributes\":{\"content\":\"const EditListItemForm = () => {\\n  const handleEditListItem = async (e) => {\\n    try {\\n      // Editing logic\\n    } catch (err) {\\n      console.error(err.message);\\n    }\\n  };\\n  return <ListItemForm onSubmit={handleEditListItem} />;\\n};\\n\",\"language\":\"javascript\"},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[414,426],\"inline\":false,\"attributes\":{\"content\":\"const EditListItemForm = () => {\\n  const handleEditListItem = async (e) => {\\n    try {\\n      // Editing logic\\n    } catch (err) {\\n      console.error(err.message);\\n    }\\n  };\\n  return <ListItemForm onSubmit={handleEditListItem} />;\\n};\\n\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":414},\"end\":{\"line\":426}}}],\"type\":\"fence\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":414},\"end\":{\"line\":426}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[427,428],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[427,428],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[427,428],\"inline\":true,\"attributes\":{\"content\":\"By applying the DIP, we can test each component separately without being concerned about affecting other connected parts.\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":427},\"end\":{\"line\":428}}}],\"type\":\"inline\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":427},\"end\":{\"line\":428}}}],\"type\":\"paragraph\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":427},\"end\":{\"line\":428}}},{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[429,430],\"inline\":false,\"attributes\":{\"level\":5},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[429,430],\"inline\":false,\"attributes\":{},\"children\":[{\"$$mdtype\":\"Node\",\"errors\":[],\"lines\":[429,430],\"inline\":true,\"attributes\":{\"content\":\"I tried to explain the **** ***S.O.L.I.D in the context of react code. Hope it helped you :)***😃😃\"},\"children\":[],\"type\":\"text\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":429},\"end\":{\"line\":430}}}],\"type\":\"inline\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":429},\"end\":{\"line\":430}}}],\"type\":\"heading\",\"annotations\":[],\"slots\":{},\"location\":{\"start\":{\"line\":429},\"end\":{\"line\":430}}}],\"type\":\"document\",\"annotations\":[],\"slots\":{}}";

const getHeadings = createGetHeadings(stringifiedAst, markdocConfig, options);
const Content = createContentComponent(
	$$Renderer,
	stringifiedAst,
	markdocConfig,
  options,
	tagComponentMap,
	nodeComponentMap,
);

export { Content, getHeadings };
